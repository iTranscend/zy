name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: short
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust-version: [1.59.0, stable]
        name: [
          # aaarch64
          linux-aarch64-gnu, macos-aarch64,
          # arm
          linux-arm-gnu, linux-arm-musl,
          # i686
          win32-msvc, linux-i686-gnu, linux-i686-musl,
          # x86_64
          macos-x86_64, win64-gnu, win64-msvc, linux-x86_64-gnu, linux-x86_64-musl
        ]
        include:
        - { name: 'linux-aarch64-gnu', target: aarch64-unknown-linux-gnu   , os: ubuntu-latest , use-cross: true }
        - { name: 'macos-aarch64'    , target: aarch64-apple-darwin        , os: macos-latest  ,                 }
        - { name: 'linux-arm-gnu'    , target: arm-unknown-linux-gnueabihf , os: ubuntu-latest , use-cross: true }
        - { name: 'linux-arm-musl'   , target: arm-unknown-linux-musleabihf, os: ubuntu-latest , use-cross: true }
        - { name: 'win32-msvc'       , target: i686-pc-windows-msvc        , os: windows-latest,                 }
        - { name: 'linux-i686-gnu'   , target: i686-unknown-linux-gnu      , os: ubuntu-latest , use-cross: true }
        - { name: 'linux-i686-musl'  , target: i686-unknown-linux-musl     , os: ubuntu-latest , use-cross: true }
        - { name: 'macos-x86_64'     , target: x86_64-apple-darwin         , os: macos-latest  ,                 }
        - { name: 'win64-gnu'        , target: x86_64-pc-windows-gnu       , os: windows-latest,                 }
        - { name: 'win64-msvc'       , target: x86_64-pc-windows-msvc      , os: windows-latest,                 }
        - { name: 'linux-x86_64-gnu' , target: x86_64-unknown-linux-gnu    , os: ubuntu-latest ,                 }
        - { name: 'linux-x86_64-musl', target: x86_64-unknown-linux-musl   , os: ubuntu-latest , use-cross: true }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install prerequisites
      shell: bash
      run: |
        case ${{ matrix.target }} in
          arm-unknown-linux-*) sudo apt-get -y update ; sudo apt-get -y install gcc-arm-linux-gnueabihf ;;
          aarch64-unknown-linux-gnu) sudo apt-get -y update ; sudo apt-get -y install gcc-aarch64-linux-gnu ;;
        esac

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust-version }}
        target: ${{ matrix.target }}

    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    - name: Check
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use-cross }}
        command: check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use-cross }}
        command: clippy
        args: -D clippy::all

  clippy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run clippy
      run: cargo clippy -- -D clippy::all

  cargo-fmt:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
