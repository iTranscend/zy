# Derived from:
#  - https://github.com/BurntSushi/ripgrep/blob/000015791742bb1280f1853adb714fdee1ba9f8e/.github/workflows/release.yml
#  - https://github.com/near/near-cli-rs/blob/a8679a3603015f1d651f874fdf0feff0d7514131/.github/workflows/release.yml
#  - https://github.com/sharkdp/bat/blob/7c847d84b0c3c97df6badfbb39d153ad93aec74e/.github/workflows/CICD.yml
#  - https://github.com/near/near-jsonrpc-client-rs/blob/2a9cce4710bb87592baf5d7ca7015e3d474584e9/.github/workflows/ci.yml

name: release

on:
  push:
    # Enable when testing release infrastructure on a branch.
    branches:
    - ci/release-check
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-*"

env:
  # Emit backtraces on panics.
  RUST_BACKTRACE: 1
  # Set to force version number, e.g., when no tag exists.
  ZY_VERSION: v0.1.5
    
jobs:
  build-release:
    name: ${{ matrix.job.name }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: 'linux-aarch64-gnu', target: aarch64-unknown-linux-gnu   , os: ubuntu-20.04, use-cross: true }
          - { name: 'linux-arm-gnu'    , target: arm-unknown-linux-gnueabihf , os: ubuntu-20.04, use-cross: true }
          - { name: 'linux-arm-musl'   , target: arm-unknown-linux-musleabihf, os: ubuntu-20.04, use-cross: true }
          - { name: 'win32-msvc'       , target: i686-pc-windows-msvc        , os: windows-2019                  }
          - { name: 'linux-i686-gnu'   , target: i686-unknown-linux-gnu      , os: ubuntu-20.04, use-cross: true }
          - { name: 'linux-i686-musl'  , target: i686-unknown-linux-musl     , os: ubuntu-20.04, use-cross: true }
          - { name: 'macos-x86_64'     , target: x86_64-apple-darwin         , os: macos-10.15                   }
          - { name: 'win64-gnu'        , target: x86_64-pc-windows-gnu       , os: windows-2019                  }
          - { name: 'win64-msvc'       , target: x86_64-pc-windows-msvc      , os: windows-2019                  }
          - { name: 'linux-x86_64-gnu' , target: x86_64-unknown-linux-gnu    , os: ubuntu-20.04, use-cross: true }
          - { name: 'linux-x86_64-musl', target: x86_64-unknown-linux-musl   , os: ubuntu-20.04, use-cross: true }

    steps:
    - name: Get the release version from the tag
      shell: bash
      if: env.ZY_VERSION == ''
      run: |
        # Apparently, this is the right way to get a tag name. Really?
        #
        # See: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
        echo "ZY_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "version is: ${{ env.ZY_VERSION }}"

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # might be a simple `fetch-tags: true` option soon, see https://github.com/actions/checkout/pull/579
        fetch-depth: 0

    - name: Install prerequisites
      shell: bash
      run: |
        case ${{ matrix.job.target }} in
          arm-unknown-linux-*) sudo apt-get -y update ; sudo apt-get -y install gcc-arm-linux-gnueabihf ;;
          aarch64-unknown-linux-gnu) sudo apt-get -y update ; sudo apt-get -y install gcc-aarch64-linux-gnu ;;
        esac

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.job.target }}

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.job.use-cross }}
        command: build
        args: --verbose --locked --release --target=${{ matrix.job.target }}

    - name: Strip debug information from executable
      id: strip
      shell: bash
      run: |
        # Figure out suffix of binary
        EXE_suffix=""
        case ${{ matrix.job.target }} in
          *-pc-windows-*) EXE_suffix=".exe" ;;
        esac;

        # Figure out what strip tool to use if any
        STRIP="strip"
        case ${{ matrix.job.target }} in
          arm-unknown-linux-*) STRIP="arm-linux-gnueabihf-strip" ;;
          aarch64-unknown-linux-gnu) STRIP="aarch64-linux-gnu-strip" ;;
          *-pc-windows-msvc) STRIP="" ;;
        esac;
        
        ZY_BIN_PATH="target/${{ matrix.job.target }}/release/zy${EXE_suffix}"
        
        if [ -n "${STRIP}" ]; then
          "${STRIP}" "${ZY_BIN_PATH}"
        fi

        echo "ZY_BIN_PATH=${ZY_BIN_PATH}" >> $GITHUB_ENV

    - name: Build archive
      shell: bash
      run: |
        # zy-v0.1.4-x86_64-unknown-linux-gnu
        ZY_PKG_BASENAME="zy-${{ env.ZY_VERSION }}-${{ matrix.job.target }}"
        mkdir "${ZY_PKG_BASENAME}"

        cp "${ZY_BIN_PATH}" "${ZY_PKG_BASENAME}/"
        cp README.md CHANGELOG.md LICENSE-MIT LICENSE-APACHE "${ZY_PKG_BASENAME}/"

        case ${{ matrix.job.target }} in
          *-pc-windows-*)
              ZY_PKG_PATH="${ZY_PKG_BASENAME}.zip"
              7z -y a "${ZY_PKG_PATH}" "${ZY_PKG_BASENAME}"/* | tail -2
            ;;
          *)
              ZY_PKG_PATH="${ZY_PKG_BASENAME}.tar.gz"
              tar czf "${ZY_PKG_PATH}" "${ZY_PKG_BASENAME}"/*
            ;;
        esac
        echo "ZY_PKG_PATH=${ZY_PKG_PATH}" >> $GITHUB_ENV

    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@c24866884b7a0d2fd2095be2e406b6f260479da8

    - name: Get Contributors
      id: get-contributors
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        DEFAULT_RELEASE_NOTE="$(
          gh api \
            /repos/${{ github.repository }}/releases/generate-notes \
            -f tag_name='${{ env.ZY_VERSION }}' \
            -q .body \
        )"
        echo "Default Release Note"
        echo "${DEFAULT_RELEASE_NOTE}"
        echo
        CONTRIBUTORS="$(
          <<< "${DEFAULT_RELEASE_NOTE}" \
          perl -ne 'print if s/.+ by (@[a-z\d](?:[a-z\d]|-(?=[a-z\d])){0,38}) in https.+$/\1/i' \
          | sort -u \
        )"
        echo "Contributors"
        echo "${CONTRIBUTORS}"
        echo
        PRETTY_CONTRIBUTOR_LIST="$(
          xargs <<< "${CONTRIBUTORS}" \
          | sed 's/ /, /g;s/\(.*\), \(.*\)$/\1 and \2/' \
        )"
        echo "Prettified Contributors"
        echo "${PRETTY_CONTRIBUTOR_LIST}"
        echo
        echo "PRETTY_CONTRIBUTOR_LIST=${PRETTY_CONTRIBUTOR_LIST}" >> $GITHUB_ENV

    - name: Check Current Latest Tag
      run: |
        export GIT_PREVIOUS_TAG="$(git describe --tags --abbrev=0 --match 'v[0-9]*.[0-9]*.[0-9]*')"
        echo "GIT_PREVIOUS_TAG=${GIT_PREVIOUS_TAG}" >> $GITHUB_ENV
        echo "Current latest git release tag is \"${GIT_PREVIOUS_TAG}\""

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.ZY_VERSION }}
        files: ${{ env.ZY_PKG_PATH }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ## What's changed in ${{ matrix.job.target }}?
        
          ${{ steps.extract-release-notes.outputs.release_notes }}

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ env.GIT_PREVIOUS_TAG }}...${{ env.ZY_VERSION }}
          <sup>
          ðŸŽ‰  Thanks to ${{ env.PRETTY_CONTRIBUTOR_LIST }} for their contributions to this release. ðŸŽ‰
          </sup>
